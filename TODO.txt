Not very organized but basic list to do.

1. Add new fields to the User table   DONE
2. Implement the logic for the fields
  - failed_attempts (coed to count and timer for the max inputs)
  - account_locked (Dependency? Or just check it at every endpoint?)
  - is_verified (May just leave this as is_active, but I still need to bubild the verify email code)

3. Work on the logger. Maybe add a logger that is dedicated to logins, and other inportant actions.  DONE

4. ADD A new table 'Accounts' 
   "So when a user is created, by default an account for that user is also created." So I need to figure out how 
   all this is accomplished and what I need to change about my user creation code.
   "I believe most of the account s\details are not set by the user. I dont believe they will need to 
   change them as you would options. I;m concerend about how all this will be updated, etc."  Will I need to add
   new endpoints, Account-update/{user_id}.. etc? I guess I'll feel this out. I feel like the account data is accessed
   via userUpdate() as it was before, its just now there is a nother table and new data associated.
   a. model
   b. schema
   c. intergrat3e CRUD class for DB operations
   d. Update create CRUD for user so that it adds to theaccount table on user creation.
5. Design Emails:
   a. Email Verify
   b. Forgot username
   c. Forgot password
6. Add the code to tie in the email api to this api whwn a user is created.

A LOT TO DO! 

  