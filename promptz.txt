 Ok, I am having a major issue and I believe I have it narrowed down to the account ORM. The class that represevts the data in the database.

 I have a fastapi app with a postgres database, and SQLALchemy ORM. since it is fastapi ofcourse i am using pydantic models for my schema. 
 I have a user table, and an account table. There is a relationship defined in the user and account class to tie them together. A user must have an account,
 and an account has to have a user. The schema is a bit wild but it works really well for creation of data and i can successfully create a user and an account for 
 the user. I am using the cascade so that when a user is deleted the account goes as well. 

 Now the issue is when I want to update. When I send the update i have to have access to the ORM to send into the update function along woth the dict data of the 
 account,and the update_data. Pretty standard I think, the user ORM is fine, it shows the address (in logging) and the dict data, but when I try and pass the account into
 it, theres nothing. THere is the adderess: <app.models.account.Account object at 0x7faeee9b5d10> but no trailing dict data like i get with user. I have a function jsonable_encoder that 
 pulls the dict info out and cleans it up. I need you to see if you can fucgure out wht I dont have this data that I need to make a successful update with the user and accoiunt information. 
 I think its some issue with the Account class in app/models/accuont.py. I am giving you the latest commit from my repo in a zip file. The database schema, models, the alembic
 migrations that set up the database, its all in there. 

 again. when i try to update a users information, the user info will be updated, but the account doesn't do anything at all. 